# Load required libraries
if (!require(Seurat)) {
  install.packages("Seurat")
  library(Seurat)
}
if (!require(ggplot2)) {
  install.packages("ggplot2")
  library(ggplot2)
}
if (!require(patchwork)) {
  install.packages("patchwork")
  library(patchwork)
}

# Load the pre-processed Seurat object
data.merged <- readRDS("data_mpnst.rds")

# Optionally subset for MPNST cells while keeping the original UMAP data
# (Assumes that the metadata column 'sample' exists and contains "mpnst")
if ("sample" %in% colnames(data.merged@meta.data)) {
  mpnst_data <- subset(data.merged, subset = sample == "mpnst")
  message("MPNST subset created with ", ncol(mpnst_data), " cells.")
} else {
  message("Metadata column 'sample' not found. Continuing with full dataset.")
  mpnst_data <- data.merged
}

# Create the cluster UMAP plot (left panel) from the full object
p_cluster <- DimPlot(data.merged, reduction = "umap",
                     group.by = "ident",
                     label = TRUE,
                     repel = TRUE) +
             ggtitle("Cell Clusters") +
             theme(plot.title = element_text(size = 14, face = "bold"),
                   legend.position = "right")

# Define the folder where the plots will be saved
picture_folder <- "pictures"
if (!dir.exists(picture_folder)) {
  dir.create(picture_folder, recursive = TRUE)
}

# List of genes to visualize
gene_list <- c("COL6A1", "COL6A2", "COL6A3")

# Loop over the genes to create and save side-by-side UMAP plots
for (gene in gene_list) {
  # Create feature plot (gene expression) UMAP for the current gene from the MPNST subset
  p_feature <- FeaturePlot(mpnst_data,
                           features = gene,
                           reduction = "umap",
                           min.cutoff = "q5",
                           max.cutoff = "q95",
                           order = TRUE) +
              ggtitle(paste(gene, "Expression in MPNST cells")) +
              theme(plot.title = element_text(size = 14, face = "bold"))
  
  # Combine the original cluster UMAP and the feature plot side-by-side
  combined_plot <- p_cluster + p_feature + plot_layout(ncol = 2)
  
  # Save the combined plot with a gene-specific filename in the pictures folder
  file_name <- paste0(picture_folder, "/", gene, "_expression_combined_UMAP.pdf")
  ggsave(file_name, combined_plot, width = 16, height = 8)
  
  message("Saved UMAP visualization for ", gene, " as ", file_name)
}